version: 2.1

jobs:
  test:
    parameters:
      java-version:
        type: string
      millargs:
        type: string
    machine:
      image: ubuntu-2004:current
    resource_class: large
    steps:
    - checkout
    - run:
        name: "Install OpenJDK"
        command: |
          sudo apt-get update && sudo apt-get install openjdk-<< parameters.java-version >>-jdk
          sudo apt-get install clang
          sudo update-alternatives --set java /usr/lib/jvm/java-<< parameters.java-version >>-openjdk-amd64/bin/java
          sudo update-alternatives --set javac /usr/lib/jvm/java-<< parameters.java-version >>-openjdk-amd64/bin/javac
          java -version
    - run:
        name: "Mill Command"
        command: "./mill -ik << parameters.millargs >>"

workflows:
  all-tests:
    jobs:
    - main-etc-11:
        java-version: "11"
        millargs: '"{main,scalalib,testrunner,testkit,bsp}.__.test"'
    - main-etc-17:
        java-version: "17"
        millargs: '"{main,scalalib,testrunner,testkit,bsp}.__.test"'

      # For most tests, run them arbitrarily on Java 8 or Java 17 on Linux, and
      # on the opposite version on Windows below, so we get decent coverage of
      # each test on each Java version and each operating system
    - scalajslib:
        java-version: "11"
        millargs: '"scalajslib.__.test"'
    - scalanativelib:
        java-version: "11"
        millargs: '"scalanativelib.__.test"'
    - contrib:
        java-version: "17"
        millargs: "contrib._.test"

      # Group these tests together to try and balance out the runtimes of each job
      # Just running in `local` mode since they shouldn't depend on the mode
    - example-javalib-scalalib:
        java-version: "17"
        millargs: "'example.{javalib,scalalib}.__.local.test'"
    - example-depth-extending:
        java-version: "11"
        millargs: "'example.{depth,extending}.__.local.test'"
    - example-thirdparty-java-11:
        java-version: "11"
        millargs: "'example.thirdparty[{mockito,acyclic,commons-io}].local.test'"
    - example-thirdparty-java-17:
        java-version: "17"
        millargs: "'example.thirdparty[{fansi,jimfs,netty,gatling}].local.test'"

      # Most of these integration tests should not depend on which mode they
      # are run in, so just run them in `local`
    - integration:
        java-version: "11"
        millargs: "'integration.{failure,feature,ide}[_].local.test'"

      # These invalidation tests need to be exercised in all three execution modes
      # to make sure they work with and without -i/--no-server being passed
    - integration-invalidation-local:
        java-version: "17"
        millargs: "'integration.invalidation[_].local.test'"
    - integration-invalidation-fork:
        java-version: "17"
        millargs: "'integration.invalidation[_].fork.test'"
    - integration-invalidation-server:
        java-version: "17"
        millargs: "'integration.invalidation[_].server.test'"

      # Check docsite compiles
    - docs:
        java-version: "17"
        millargs: docs.githubPages